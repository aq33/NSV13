#define NUKE_CODE_AUTOGENERATION_ADMIN_INTERVENTION_TIME 20

/datum/request
	/// For nuke code requests; auto-fulfillment
	var/autogenerate

/datum/request/proc/auto_generate_nuke_code()
	autogenerate = TRUE
	message_admins("Automatically generating nuke codes requested by [ADMIN_FULLMONTY(owner)] in [NUKE_CODE_AUTOGENERATION_ADMIN_INTERVENTION_TIME] seconds. (<a href='?src=[REF(src)];cancel=1'>CANCEL</a>)")
	sleep(NUKE_CODE_AUTOGENERATION_ADMIN_INTERVENTION_TIME SECONDS)
	if(autogenerate)
		var/code = random_code(5)
		for(var/obj/machinery/nuclearbomb/selfdestruct/SD in GLOB.nuke_list)
			SD.r_code = code
		message_admins("Per [ADMIN_FULLMONTY(owner)]'s request, the nuke codes have been autogenerated and set to \"[code]\".")
		var/message = \
{"Prośba o przesłanie kodów autoryzacji nuklearnej autodestrukcji statku nie została rozpatrzona w stosownym czasie przez operatora.
System awaryjny automatycznie zatwierdził prośbe.
Kod do ładunku nuklearnego na pokładzie waszego statku to [code]."}
		addtimer(CALLBACK(GLOBAL_PROC, GLOBAL_PROC_REF(priority_announce), message, "Automatyczny System Awaryjny Centrali"), 2 SECONDS)


/datum/request/Topic(href, href_list)
	. = ..()
	if(href_list["cancel"])
		if(req_type != REQUEST_NUKE) // what are you trying to cancel???
			to_chat(usr, "<span class='admin'>You can't cancel this type of request.</span>")
			return
		if(!autogenerate)
			to_chat(usr, "<span class='admin'>You are too late to cancel that!</span>")
			return
		autogenerate = FALSE
		message_admins("[key_name_admin(usr)] cancelled nuke code autogeneration requested by [ADMIN_FULLMONTY(owner)].")
		log_admin_private("[key_name(usr)] cancelled code autogeneration requested by [ADMIN_FULLMONTY(owner)].")
		SSblackbox.record_feedback("tally", "nuke_code_autogeneration_admin_cancelled", 1, message)

#undef NUKE_CODE_AUTOGENERATION_ADMIN_INTERVENTION_TIME
